"use strict";angular.module("angular-filepicker",[]);"use strict";angular.module("angular-filepicker").directive("filepicker",filepickerDirective);function filepickerDirective($rootScope,filepickerService){return{restrict:"A",scope:{onSuccess:"&"},link:function(scope,element,attrs){element.bind("change",function(event){event.preventDefault();scope.onSuccess({event:event.originalEvent});$rootScope.$apply()});filepickerService.constructWidget(element)}}}filepickerDirective.$inject=["$rootScope","filepickerService"];angular.module("angular-filepicker").service("filepickerService",filepickerService);function filepickerService($window){return $window.filepicker}filepickerService.$inject=["$window"];angular.module("angular-filepicker").provider("filepicker",function(){this.$get=function(){return window.filepicker};this.setKey=function(key){this.key=key}});angular.module("angular-filepicker").service("fpUtilService",FpUtilService);function FpUtilService(){return{toParams:toParams,serialize:serialize};function toParams(obj){var pairs=[];for(var prop in obj){if(!obj.hasOwnProperty(prop)){continue}if(Object.prototype.toString.call(obj[prop])==="[object Object]"){pairs.push(serialize(obj[prop]));continue}pairs.push(prop+"="+obj[prop])}return pairs.join("&")}function serialize(obj){var str=[];for(var p in obj){if(obj.hasOwnProperty(p)){str.push(encodeURIComponent(p)+"="+encodeURIComponent(obj[p]))}}return str.join("&")}}"use strict";angular.module("angular-filepicker").filter("fpConvert",fpConvert);function fpConvert($filter,fpUtilService){return function(value,convertOptions){var originalUrl=$filter("fpUrlFilter")(value);if(!originalUrl||!convertOptions){return}return originalUrl+"/convert?"+fpUtilService.toParams(convertOptions)}}fpConvert.$inject=["$filter","fpUtilService"];angular.module("angular-filepicker").filter("fpUrlFilter",function(){return function(input){if(!input){return""}var endpoints=["/convert","/metadata","?"];for(var i in endpoints){var index=input.indexOf(endpoints[i]);if(index>-1){return input.substr(0,index)}}return input}});